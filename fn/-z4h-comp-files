()  {
  eval "$_z4h_opt"

  local -i dot_glob list_types
  [[ $1 == on ]] && dot_glob=1
  [[ $2 == on ]] && list_types=1
  local word_prefix=$3
  local path_prefix=$4
  local -i only_dirs=$5
  local words=("${@:6}")

  compstate[list]=
  compstate[insert]=

  local -a prune
  if (( dot_glob )); then
    prune+=('-path "*/.*/*"')
  else
    prune+=('-path "*/.*"')
  fi
  if [[ ${commands[find]:A} != */busybox* ]]; then
    prune+=('-fstype '{sysfs,devfs,devtmpfs,proc})
  fi
  prune="\( ${(j: -o :)prune} \) -prune"
  local filter
  (( only_dirs )) && filter='-type d'
  local dirs=($path_prefix${^${(Q)words:#.*}}(-FN:t))
  dirs=(./${^dirs})
  dirs=${(j: :)${(@Aq)dirs}}
  local cmd="command find -L $dirs -mindepth 1 $prune -o $filter -print | command cut -b3-"

  local query char
  for char in ${(s::)words[1]}; do
    [[ -z ${words:#$query$char*} ]] || break
    query+=$char
  done

  local opt=(
    --with-nth=2
    --delimiter='\000'
    --ansi
    --exact
    --layout=reverse
    --height=$(( ! $#dirs && ($#words + 2) < 60 * LINES ? $#words + 2 : 60 * LINES / 100 ))
    --tiebreak=length,begin,index
    --multi
    --cycle
    --query=$query
    --bind=tab:down,btab:up,ctrl-space:toggle)
  local cont
  if _fzf_tab_get -s continuous-trigger cont && [[ -n $cont ]]; then
    opt+=(--expect=$cont)
  fi

  -z4h-set-list-colors "$_fzf_tab_curcontext" "$list_types"
  local -i list_colors=$((!$?))

  print >$TTY
  {
    local choice again
    choice="$(
      unsetopt pipe_fail
      exec 2>/dev/null
      [[ -n $path_prefix ]] && builtin cd -q -- $path_prefix
      {
        print -lr -- ${(Q)words}
        [[ -z $dirs ]] || eval $cmd
      } | {
        -z4h-present-files $list_colors $list_types
      } | {
        -z4h-cursor-show
        $Z4H/fzf/bin/fzf $opt 2>$TTY
      }
    )" && [[ -n $choice ]] || return
    [[ $choice == $'\n'* ]] || again=1
  } always {
    print -n "$again" >$_z4h_fzf_called
    -z4h-cursor-hide
  }

  choice=(${${(f)${choice#*$'\n'}}%$'\0'*})
  builtin compadd -Uf -p "$word_prefix" -W "$path_prefix" -o nosort - $choice
  if (( $#choice == 1 )); then
    compstate[insert]=2
    [[ $RBUFFER == ' '* ]] || compstate[insert]+=' '
  else
    compstate[insert]=all
  fi
} "${options[dot_glob]}" "${options[list_types]}" "$@"
