()  {
  eval "$_z4h_opt"

  local -i dot_glob list_types
  [[ $1 == on ]] && dot_glob=1
  [[ $2 == on ]] && list_types=1
  local word_prefix=$3
  local path_prefix=$4
  local -i only_dirs=$5
  local words=("${(Q)@:6}")

  compstate[list]=
  compstate[insert]=

  local -a prune
  if (( dot_glob )); then
    prune+=('-path "*/.*/*"')
  else
    prune+=('-path "*/.*"')
  fi
  if [[ ${commands[find]:A} != */busybox* ]]; then
    prune+=('-fstype '{sysfs,devfs,devtmpfs,proc})
  fi
  prune="\( ${(j: -o :)prune} \) -prune"
  local filter
  (( only_dirs )) && filter='-type d'
  local dirs=($path_prefix${^${words:#.*}}(-FN:t))
  dirs=(./${^dirs})
  dirs=${(j: :)${(q)dirs}}
  local cmd="command find -L $dirs -mindepth 1 $prune -o $filter -print 2>/dev/null | command cut -b3-"
  local opt=(
    --with-nth=2
    --delimiter='\000'
    --ansi
    --exact
    --no-sort
    --layout=reverse
    --height=75%
    --tiebreak=length,begin
    --multi
    --bind=tab:down,btab:up,ctrl-space:toggle)
  local cont
  if _fzf_tab_get -s continuous-trigger cont && [[ -n $cont ]]; then
    opt+=(--expect=$cont)
  fi

  local -a list_colors
  zstyle -a :completion:$_fzf_tab_curcontext list-colors list_colors
  if [[ .${(pj:\0:)list_colors} != $_z4h_last_list_colors ]]; then
    typeset -g _z4h_last_list_colors=.${(pj:\0:)list_colors}
    typeset -gA _z4h_name_colors=(${(@s:=:)${(@s.:.)list_colors}:#[[:alpha:]][[:alpha:]]=*})
    typeset -gA _z4h_mode_colors=(${(@Ms:=:)${(@s.:.)list_colors}:#[[:alpha:]][[:alpha:]]=*})
    typeset -gA _z4h_mode_codes=()
    () {
      local -i8 a b c d
      local -a codes
      for a in 0140000 0100000 0060000 0040000 0020000 0010000; do
        for b in 0 04000 02000; do
          for c in 0 01000 00002 01002; do
            for d in 0 1; do
              codes=()
              if (( a != 0100000 )); then
                if   (( a == 0140000 )); then codes+=($_z4h_mode_colors[so])
                elif (( a == 0060000 )); then codes+=($_z4h_mode_colors[bd])
                elif (( a == 0040000 )); then codes+=($_z4h_mode_colors[di])
                elif (( a == 0020000 )); then codes+=($_z4h_mode_colors[cd])
                elif (( a == 0010000 )); then codes+=($_z4h_mode_colors[pi]); fi

                if   (( c == 01000   )); then codes+=($_z4h_mode_colors[st])
                elif (( c == 00002   )); then codes+=($_z4h_mode_colors[ow])
                elif (( c == 01002   )); then codes+=($_z4h_mode_colors[tw]); fi
              fi
              (( $#codes )) || (( ! c )) || codes+=($_z4h_mode_colors[ex])
              _z4h_mode_codes[$((a|b|c|d))]=${(j:;:)codes}
            done
          done
        done
      done
    }
  fi

  print >$TTY
  {
    local choice again
    choice="$(
      unsetopt pipe_fail
      exec 2>/dev/null
      [[ -n $path_prefix ]] && builtin cd -q -- $path_prefix
      {
        print -lr -- $words
        eval $cmd
      } | {
        -z4h-present-files
      } | {
        -z4h-cursor-show
        $Z4H/fzf/bin/fzf $opt 2>$TTY
      }
    )" && [[ -n $choice ]] || return
    [[ $choice == $'\n'* ]] || again=1
  } always {
    print -n "$again" >$_z4h_fzf_called
    -z4h-cursor-hide
  }

  choice=(${${(f)${choice#*$'\n'}}%$'\0'*})
  builtin compadd -Uf -p "$word_prefix" -W "$path_prefix" -o nosort - $choice
  if (( $#choice == 1 )); then
    compstate[insert]=2
    [[ $RBUFFER == ' '* ]] || compstate[insert]+=' '
  else
    compstate[insert]=all
  fi
} "${options[dot_glob]}" "${options[list_types]}" "$@"
