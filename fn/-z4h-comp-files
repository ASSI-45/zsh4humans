()  {
  eval "$_z4h_opt"

  local -i dot_glob list_types
  [[ $1 == on ]] && dot_glob=1
  [[ $2 == on ]] && list_types=1

  if (( _z4h_only_dirs )); then
    if (( dot_glob )); then
      local dirs=($_z4h_path_prefix${^${(Q)_z4h_words:#.*}}/*(D-/Y1N:h:t))
    else
      local dirs=($_z4h_path_prefix${^${(Q)_z4h_words:#.*}}/*(-/Y1N:h:t))
    fi
  else
    if (( dot_glob )); then
      local dirs=($_z4h_path_prefix${^${(Q)_z4h_words:#.*}}/*(DY1N:h:t))
    else
      local dirs=($_z4h_path_prefix${^${(Q)_z4h_words:#.*}}/*(Y1N:h:t))
    fi
  fi

  -z4h-set-list-colors "$_z4h_curcontext" "$list_types"
  local -i list_colors=$((!$?))

  autoload +X -Uz -- -z4h-present-files -z4h-cursor-show -z4h-find -z4h-fzf

  local esc line col
  IFS='[;' builtin read -s -d R esc\?$'\e[6n' line col <$TTY || return
  print >$TTY || return

  {
    local choice
    choice="$(
      unsetopt pipe_fail
      exec 2>/dev/null
      [[ -n $_z4h_path_prefix ]] && builtin cd -q -- $_z4h_path_prefix
      {
        print -lr -- ${(Q)_z4h_words}
        # Set curcontext to support this:
        #
        #   zstyle -e :z4h:fzf-complete find-flags my-find-flags
        #
        #   function my-find-flags() {
        #     if [[ $curcontext == :complete:cd:* ]]; then
        #       reply=(...)
        #     fi
        #   }
        local curcontext=$_z4h_curcontext
        -z4h-find $dot_glob $_z4h_only_dirs $dirs | command cut -b3-
      } | {
        -z4h-present-files $list_colors $list_types
      } | {
        -z4h-cursor-show
        2>$TTY -z4h-fzf                                     \
          --query=${_z4h_word_prefix:+"^$_z4h_word_prefix"} \
          --color=hl:201,hl+:201                            \
          --with-nth=2                                      \
          --delimiter='\000'                                \
          --ansi                                            \
          --exact                                           \
          --no-mouse                                        \
          --layout=reverse                                  \
          --tiebreak=length,begin,index                     \
          --multi                                           \
          --cycle                                           \
          --height=$(( ! $#dirs && 100 * ($#_z4h_words + 2) < 60 * LINES ? $#_z4h_words + 2 : 60 * LINES / 100 ))
      }
    )"
  } always {
    -z4h-cursor-hide
    builtin echoti cuu 1
    (( col > 1 )) && builtin echoti cuf $((col-1))
  }

  [[ -n $choice ]] || return
  choice=("${(@f)choice}")
  typeset -g _z4h_reply=(0 ${${choice:1}%$'\0'*})
  [[ -z $choice[1] ]] || _z4h_reply[1]=1
} "${options[dot_glob]}" "${options[list_types]}"
