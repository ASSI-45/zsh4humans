[[ -w $TTY && -r $TTY ]] || return

autoload +X -Uz -- -z4h-present-files -z4h-cursor-show -z4h-find

local -i dot_glob list_types
[[ -o dot_glob   ]] && dot_glob=1
[[ -o list_types ]] && list_types=1

-z4h-set-list-colors complete:cd:: $list_types
local -i list_colors=$((!$?))

{
  -z4h-cursor-hide

  local -i first=1
  while true; do
    local -i redraw=0 again=0
    () {
      eval "$_z4h_opt"
      if (( dot_glob )); then
        local dirs=(./*(-/DN))
        local non_empty=(${^${dirs:#./.*}}/*(D-/Y1N:h:t))
      else
        local dirs=(./*(-/N))
        local non_empty=(${^dirs}/*(-/Y1N:h:t))
      fi

      if (( first )); then
        first=0
      elif (( ! $#dirs )); then
        return 0
      fi

      local query char
      for char in ${(s::)dirs[1]}; do
        [[ -z ${dirs:#$query$char*} ]] || break
        query+=$char
      done

      local bind=(
        ctrl-h:backward-kill-word
        alt-j:clear-query
        ctrl-u:clear-query
        ctrl-k:kill-line
        alt-k:unix-line-discard
        tab:down
        btab:up)
      local opt=(
        --with-nth=2
        --delimiter='\000'
        --ansi
        --exact
        --no-mouse
        --layout=reverse
        --height=$(( ! $#non_empty && 100 * ($#dirs + 2) < 60 * LINES ? $#dirs + 2 : 60 * LINES / 100 ))
        --tiebreak=length,begin,index
        --no-multi
        --cycle
        --query=${query:2}
        --bind=${(j:,:)bind})
      local cont
      if zstyle :fzf-tab: -s continuous-trigger cont && [[ -n $cont ]]; then
        opt+=(--expect=$cont)
      fi

      {
        -z4h-show-dots
        local esc line col
        IFS='[;' read -s -d R esc\?$'\e[6n' line col <$TTY || return
        print >$TTY || return

        {
          local choice
          choice=$(
            unsetopt pipe_fail
            exec 2>/dev/null
            {
              print -rC1 -- $dirs
              -z4h-find $dot_glob 1 $non_empty
            } | command cut -b3- | -z4h-present-files $list_colors $list_types | {
              -z4h-cursor-show
              $Z4H/fzf/bin/fzf $opt 2>$TTY
            } always {
              -z4h-cursor-hide
            }) && [[ -n $choice ]] || return
          if [[ -n $cont ]]; then
            [[ $choice == $'\n'* ]] || again=1
            choice=${choice#*$'\n'}
            [[ -n $choice ]] || return
          fi
          cd -- ${choice%%$'\0'*} || return
          redraw=1
        } always {
          echoti cuu 1
          (( col > 1 )) && echoti cuf $((col-1))
        }
      } always {
        zle -R
      }
    } || return
    (( redraw )) && -z4h-redraw-prompt 1
    (( again )) || break
  done
} always {
  -z4h-cursor-show
}
