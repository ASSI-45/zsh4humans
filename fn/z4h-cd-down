[[ -w $TTY && -r $TTY ]] || return

autoload +X -Uz -- -z4h-present-files -z4h-cursor-show -z4h-find -z4h-fzf

local -i dot_glob list_types
[[ -o dot_glob   ]] && dot_glob=1
[[ -o list_types ]] && list_types=1

-z4h-set-list-colors :complete:cd:: $list_types
local -i list_colors=$((!$?))

{
  -z4h-cursor-hide

  local -i first=1
  while true; do
    local -i redraw=0 again=0
    () {
      eval "$_z4h_opt"
      if (( dot_glob )); then
        local dirs=(./*(-/DN))
      else
        local dirs=(./*(-/N))
      fi
      local non_empty=(${^${dirs}}/*(D-/Y1N:h:t))

      if (( first )); then
        first=0
      elif (( ! $#dirs )); then
        return 0
      fi

      {
        -z4h-show-dots ''
        
        local -i pct=60
        [[ -n $_Z4H_TMUX ]] && pct=100

        local -i height=$(( ! $#non_empty && 100 * ($#dirs + 4) < pct * LINES ? $#dirs + 4 : pct * LINES / 100 ))

        (( height >= 6 )) || (( height = 6 ))
        (( height <= LINES - 1 )) || (( height = LINES - 1 ))

        local opts=(
          --query=${_z4h_word_prefix:+"^$_z4h_word_prefix"}
          --color=hl:201,hl+:201
          --with-nth=2
          --delimiter='\000'
          --ansi
          --exact
          --no-mouse
          --tiebreak=length,begin,index
          --no-multi
          --border=horizontal
        )

        local cursor_y cursor_x
        -z4h-get-cursor-pos || return

        if [[ -n $_Z4H_TMUX ]]; then
          opts+=(--no-clear)
          if { (( height <= cursor_y - 1 )) && zstyle -T :z4h prompt-position bottom } ||
             (( cursor_y - 1 > LINES - cursor_y && cursor_y - 1 > 4 + preview_lines )) &&
             { (( height > LINES - cursor_y )) || zstyle -T :z4h prompt-position bottom }; then
            (( height <= cursor_y - 1 )) || (( height = cursor_y - 1 ))
            local move=$'\e[0m\e['$((cursor_y-height))';1H'
            opts+=(--layout=default)
          elif (( LINES - cursor_y > 4 )); then
            (( height <= LINES - cursor_y )) || (( height = LINES - cursor_y ))
            local move=$'\e[0m\n\r'
            opts+=(--layout=reverse)
          else
            local -i extra=$((height - LINES + cursor_y))
            print -rn -- ${(pl:$height::\n:)} >$TTY || return
            (( cursor_y += LINES - cursor_y - height ))
            local move=$'\e[0m\e['$((cursor_y+1))';1H'
            opts+=(--layout=reverse)
          fi
          local _z4h_saved_screen
          -z4h-save-screen || return
        else
          print >$TTY || return
          local move=
          opts+=(--layout=reverse)
        fi

        opts+=(--height=$height)

        {
          local choice
          choice=$(
            unsetopt pipe_fail
            exec 2>/dev/null
            {
              print -rC1 -- $dirs
              -z4h-find $dot_glob 1 $non_empty
            } | command cut -b3- | -z4h-present-files $list_colors $list_types | {
              print -rn -- $move >$TTY
              -z4h-cursor-show
              2>$TTY -z4h-fzf $opts
            } always {
              -z4h-cursor-hide
            })
          [[ -n $choice ]] || return
          choice=("${(@f)choice}")
          [[ -n $choice[1] ]] && again=1
          cd -- ${choice[2]%%$'\0'*} || return
          redraw=1
        } always {
          if [[ -n $_Z4H_TMUX ]]; then
            print -rn -- $_z4h_saved_screen
            print -rn -- $'\e[0m\e['$cursor_y';'$cursor_x'H'
          else
            builtin echoti cuu 1
            (( cursor_x > 1 )) && builtin echoti cuf $((cursor_x-1))
          fi
        }
      } always {
        zle -R
      }
    } || return
    (( redraw )) && -z4h-redraw-prompt 1
    (( again )) || break
  done
} always {
  -z4h-cursor-show
}
