[[ -w $TTY && -r $TTY ]] || return

autoload +X -Uz -- -z4h-present-files -z4h-cursor-show -z4h-find -z4h-fzf

local -i dot_glob list_types
[[ -o dot_glob   ]] && dot_glob=1
[[ -o list_types ]] && list_types=1

-z4h-set-list-colors complete:cd:: $list_types
local -i list_colors=$((!$?))

{
  -z4h-cursor-hide

  local -i first=1
  while true; do
    local -i redraw=0 again=0
    () {
      eval "$_z4h_opt"
      if (( dot_glob )); then
        local dirs=(./*(-/DN))
      else
        local dirs=(./*(-/N))
      fi
      local non_empty=(${^${dirs}}/*(D-/Y1N:h:t))

      if (( first )); then
        first=0
      elif (( ! $#dirs )); then
        return 0
      fi

      {
        -z4h-show-dots
        local esc line col
        IFS='[;' read -s -d R esc\?$'\e[6n' line col <$TTY || return
        print >$TTY || return

        {
          local choice
          choice=$(
            unsetopt pipe_fail
            exec 2>/dev/null
            {
              print -rC1 -- $dirs
              -z4h-find $dot_glob 1 $non_empty
            } | command cut -b3- | -z4h-present-files $list_colors $list_types | {
              -z4h-cursor-show
              2>$TTY -z4h-fzf                                     \
                --color=hl:201,hl+:201                            \
                --with-nth=2                                      \
                --delimiter='\000'                                \
                --ansi                                            \
                --exact                                           \
                --no-mouse                                        \
                --layout=reverse                                  \
                --tiebreak=length,begin,index                     \
                --no-multi                                        \
                --cycle                                           \
                --height=$(( ! $#non_empty && 100 * ($#dirs + 2) < 60 * LINES ? $#dirs + 2 : 60 * LINES / 100 ))
            } always {
              -z4h-cursor-hide
            })
          [[ -n $choice ]] || return
          choice=("${(@f)choice}")
          [[ -n $choice[1] ]] && again=1
          cd -- ${choice[2]%%$'\0'*} || return
          redraw=1
        } always {
          echoti cuu 1
          (( col > 1 )) && echoti cuf $((col-1))
        }
      } always {
        zle -R
      }
    } || return
    (( redraw )) && -z4h-redraw-prompt 1
    (( again )) || break
  done
} always {
  -z4h-cursor-show
}
