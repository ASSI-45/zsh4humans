fzf-tab-lscolors::from-mode () {
	emulate -L zsh
	setopt cbases octalzeroes extendedglob
	[[ -z $2 ]] && return 1
	local -i reg=0 
	local -a codes
	local -i st_mode=$(($2)) 
	case $(( st_mode & 0170000 )) in
		($(( 0140000 ))) codes=($modecolors[so])  ;;
		($(( 0120000 )))
      if ! (($+3))
			then
				REPLY=$modecolors[or] 
			elif [[ $modecolors[ln] = target ]]
			then
				"$0" "$1" "${@:3}"
			else
				REPLY=$modecolors[ln] 
			fi
			return ;;
		($(( 0100000 ))) codes=() 
			reg=1  ;;
		($(( 0060000 ))) codes=($modecolors[bd])  ;;
		($(( 0040000 ))) codes=($modecolors[di])  ;;
		($(( 0020000 ))) codes=($modecolors[cd])  ;;
		($(( 0010000 ))) codes=($modecolors[pi])  ;;
	esac
	(( st_mode & 04000 )) && codes+=($modecolors[su]) 
	(( st_mode & 02000 )) && codes+=($modecolors[sg]) 
	(( ! reg )) && case $(( st_mode & 01002 )) in
		($(( 01000 ))) codes+=($modecolors[st])  ;;
		($(( 00002 ))) codes+=($modecolors[ow])  ;;
		($(( 01002 ))) codes+=($modecolors[tw])  ;;
	esac
	if (( ! $#codes ))
	then
		(( st_mode &  0111 )) && codes+=($modecolors[ex]) 
	fi
	[[ -n ${REPLY::=${(j:;:)codes}} ]]
}

zmodload zsh/stat

emulate -L zsh -o cbases -o octalzeroes

local -i list_types=$1

local -a list_colors
# zstyle -a ":completion:$_fzf_tab_curcontext" list-colors list_colors
list_colors=( 'rs=0' 'no=00' 'mi=00' 'mh=00' 'ln=01;36' 'or=01;31' 'di=01;34' 'ow=04;01;34' 'st=34' 'tw=04;34' 'pi=01;33' 'so=01;33' 'do=01;33' 'bd=01;33' 'cd=01;33' 'su=01;35' 'sg=01;35' 'ca=01;35' 'ex=01;32' '' )
local -A namecolors=(${(@s:=:)${(@s.:.)list_colors}:#[[:alpha:]][[:alpha:]]=*})
local -A modecolors=(${(@Ms:=:)${(@s.:.)list_colors}:#[[:alpha:]][[:alpha:]]=*})
unset "modecolors[ln]"

local -A codes

() {
  local -i8 a b c d
  local -i10 m
  for a in 0140000 0100000 0060000 0040000 0020000 0010000; do
    for b in 0 04000 02000; do
      for c in 0 01000 00002 01002; do
        for d in 0 1; do
          m='a|b|c|d'
          (( m == 040001 )) && setopt xtrace
          fzf-tab-lscolors::from-mode '' $m
          codes[$m]=$REPLY
          unsetopt xtrace
        done
      done
    done
  done
  for b in 0 04000 02000; do
    for c in 0 01000 00002 01002; do
      for d in 0 1; do
        m='0120000|b|c|d'
        codes[$m]=$'\0'
      done
    done
  done
}

local filepath nul=$'\0'
local -i10 m

local buf
while true; do
  [[ -t 99 ]]  # todo: replace with 2
  sysread -t 0 'buf[$#buf+1]' && continue
  (( $? == 5 ))          || return
  break
done

while IFS= read -r filepath; do
  local dpre= dsuf= REPLY= reply=() stat=() lstat=()
  if (( $#list_colors )); then
    if zstat -A lstat -L -- $filepath; then
      # (( lstat[3] & 0170000 )) && zstat -A stat -- $filepath
      # fzf-tab-lscolors::from-mode $filepath "$lstat[3]" $stat[3]
      # [[ -z $REPLY ]] && fzf-tab-lscolors::from-name $filepath
      m=lstat[3]
      m='m & 64002 | ((m & 73) != 0)'
      REPLY=${codes[$m]:-$namecolors[(k)${filepath:t}]}

      if false && [[ -n $lstat[14] ]]; then
        local sym_color=$REPLY
        local rsv_color=$REPLY
        local rsv=$lstat[14]
        if zstat -A stat -- $rsv; then
          fzf-tab-lscolors::from-mode $rsv $stat[3]
          [[ -z $REPLY ]] && fzf-tab-lscolors::from-name $rsv
          rsv_color=$REPLY
          (( stat[3] & 040000 && list_types )) && rsv+=/
        fi
        dpre=$'\033[0m\033['$sym_color'm'
        dsuf+=$'\033[0m -> \033['$rsv_color'm'$rsv
      else
        dpre=$'\033[0m\033['$REPLY'm'
        (( lstat[3] & 040000 && list_types )) && filepath+=/
      fi
    fi
  elif (( list_types )); then
    if zstat -A lstat -L -- $filepath; then
      if (( lstat[3] & 040000 )); then
        filepath+=/
      elif (( (lstat[3] & 0120000) == 0120000 )); then
        filepath+=@
      fi
    fi
  fi
  print -r -- "$dpre$nul${(q)filepath}$nul$dsuf"
done
