local url postinstall command

if [[ $1 == */* ]]; then
  url=https://github.com/$1/archive/master.tar.gz
  zstyle -s :z4h:$1 postinstall postinstall || postinstall=
else
  local -a channel
  zstyle -a :z4h:$1 channel channel || channel=(stable)
  case $#channel-$channel[1] in
    2-command) command=$channel[2];;
    1-stable)  url=https://github.com/zsh4humans/$1/archive/z4h-stable.tar.gz;;
    1-testing) url=https://github.com/zsh4humans/$1/archive/z4h-testing.tar.gz;;
    1-dev)
      case $1 in
        fzf)                     url=https://github.com/junegunn/$1/archive/master.tar.gz;;
        fzf-tab)                 url=https://github.com/Aloxaf/$1/archive/master.tar.gz;;
        powerlevel10k)           url=https://github.com/romkatv/$1/archive/master.tar.gz;;
        zsh-completions)         url=https://github.com/zsh-users/$1/archive/master.tar.gz;;
        zsh-autosuggestions)     url=https://github.com/zsh-users/$1/archive/master.tar.gz;;
        zsh-syntax-highlighting) url=https://github.com/zsh-users/$1/archive/master.tar.gz;;
        *)
          print -Pru2 -- "%F{3}z4h%f: %F{1}internal error%f: unknown package: ${1//\%/%%}"
          return 1
        ;;
      esac
    ;;
    1-none)
      zf_mkdir -p -- $Z4H/$1 || return
      return
    ;;
    *)
      print -Pru2 -- '%F{3}z4h%f: invalid zstyle'
      print -Pru2 -- ''
      print -Pru2 -- "  %F{2}zstyle%f :z4h:${(q)1//\%/%%} channel %F{1}${(j: :)${(@q)channel//\%/%%}}%f"
      print -Pru2 -- ''
      print -Pru2 -- 'Supported values: %Bstable%b, %Btesting%b and %Bdev%b.'
      return 1
    ;;
  esac
  (( $+functions[-z4h-postinstall-$1] )) && postinstall=-z4h-postinstall-$1
fi

if [[ -e $Z4H/.updating ]]; then
  print -Pru2 -- "%F{3}z4h%f: updating %B${1//\%/%%}%b"
else
  print -Pru2 -- "%F{3}z4h%f: installing %B${1//\%/%%}%b"
fi

local dst=$Z4H/$1

[[ -d ${dst:h} ]] || zf_mkdir -p -- ${dst:h} || return

local old new

{
  if (( $+commands[mktemp] )); then
    old="$(command mktemp -d -- $dst.old.XXXXXXXXXX)" || return
    new="$(command mktemp -d -- $dst.new.XXXXXXXXXX)" || return
  else
    old=$dst.old.$$
    new=$dst.new.$$
    zf_rm -rf -- $old $new   || return
    zf_mkdir -p -- $old $new || return
  fi

  (
    if [[ -n $command ]]; then
      local Z4H_PACKAGE_NAME=$1 Z4H_PACKAGE_DIR=$new/$1
      () { eval $command } || exit 1
      if [[ ! -d $new/$1 ]]; then
        print -Pru2 -- "%F{3}z4h%f: custom command failed to install: %F{1}${new//\%/%%}/${1//\%/%%}%f"
        exit 1
      fi
      builtin cd -q -- $new/$1 || exit
    else
      builtin cd -q -- $new || exit
      local err
      if (( $+commands[curl] )); then
        err="$(command curl -fsSLo snapshot.tar.gz -- $url 2>&1)"
      elif (( $+commands[wget] )); then
        err="$(command wget -O snapshot.tar.gz -- $url 2>&1)"
      else
        print -Pru2 -- "%F{3}z4h%f: please install %F{1}curl%f or %F{1}wget%f"
        exit 1
      fi
      if (( $? )); then
        print -ru2 -- $err
        print -Pru2 -- "%F{3}z4h%f: failed to download %F{1}${url//\%/%%}%f"
        exit 1
      fi
      command tar -xzf snapshot.tar.gz || exit
      local dirs=(./${1:t}-*(N/))
      if (( $#dirs != 1 )); then
        print -Pru2 -- "%F{3}z4h%f: invalid content: %F{1}${url//\%/%%}%f"
        return 1
      fi
      builtin cd -q -- $dirs || exit
    fi
    local Z4H_PACKAGE_NAME=$1 Z4H_PACKAGE_DIR=${(%):-%/}
    eval $postinstall || exit
  ) || return

  [[ ! -e $dst ]] || zf_mv -- $dst $old/ || return
  zf_mv -- $new/${1:t}-*(N/) $dst
} always {
  [[ -z $old && -z $new ]] || zf_rm -rf -- $old $new
}
