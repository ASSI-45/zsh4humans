if (( ! ${+functions[-z4h-orig-path-files]} )); then
  autoload +X -Uz _path_files
  functions[-z4h-orig-path-files]=${functions[_path_files]}
fi
if (( ! ${+functions[-z4h-orig-fzf-tab-main-complete]} )); then
  functions[-z4h-orig-fzf-tab-main-complete]=${functions[_fzf_tab__main_complete]}
fi
if (( ! ${+functions[-z4h-orig-compadd]} )); then
  functions[-z4h-orig-compadd]=${functions[compadd]:-'builtin compadd "$@"'}
fi
if (( ! ${+functions[-z4h-orig-zle]} )); then
  functions[-z4h-orig-zle]=${functions[zle]:-'builtin zle "$@"'}
fi

local _z4h_word_prefix
local _z4h_path_prefix
local -a _z4h_words
local -i _z4h_recursive
local -i _z4h_zle_call_num
local -i _z4h_in_path_files
local -i _z4h_only_dirs=1

{
  function _fzf_tab__main_complete() {
    -z4h-orig-fzf-tab-main-complete
    if (( _z4h_recursive == 1 )); then
      typeset -gi _fzf_tab_ignored=1
      -z4h-comp-files "$_z4h_word_prefix" "$_z4h_path_prefix" "$_z4h_only_dirs" "${_z4h_words[@]}"
    fi
  }
 
  function zle() {
    if [[ "${1-}" != .fzf-tab-orig-* ]]; then
      -z4h-orig-zle "$@"
      return
    fi
    (( _z4h_zle_call_num++ && _z4h_recursive == 1 )) && return
    -z4h-orig-zle "$@"
  }

  function compadd() {
    if (( _z4h_recursive != -1 )); then
      local -a opts nDOA Q f s S I W U i P p
      zparseopts -E -a opts {D,O,A}+:=nDOA n+=nDOA Q+=Q f+=f s+:=s S+:=S I+:=I W+:=W \
        U+:=U i+:=i P+:=P p+:=p {a,k,q,e,l,1,2,C}+ {F,d,J,X,x,V,r,R,E,M}+: o+::
      if (( ! $#nDOA )); then
        local -a matches
        () {
          builtin compadd -A matches "$@"
          (( ${#matches} )) || return 0
          emulate -L zsh
          (( _z4h_in_path_files && $#Q && $#f )) || return
          [[ -z $s[2] && -z $S[2] && -z $I[2] && $#W -ge 2 && $W[2] == (|*/) ]] || return
          local prefix=${U:-$IPREFIX}$i[2]$P[2]$p[2]
          if (( $#_z4h_words )); then
            [[ $W[2] == $_z4h_path_prefix && $prefix == $_z4h_word_prefix ]] || return
          else
            _z4h_word_prefix=$prefix
            _z4h_path_prefix=$W[2]
          fi
          _z4h_words+=($matches)
          if (( ! _z4h_recursive )); then
            local dirs=($_z4h_path_prefix${^matches}(-FN))
            if (( $#dirs )); then
              _z4h_recursive=1
              typeset -gi _fzf_tab_ignored=1
            fi
          fi
        } "$@" || {
          _z4h_recursive=-1
          typeset -gi _fzf_tab_ignored=0
        }
      fi
    fi
    -z4h-orig-compadd "$@"
  }

  function _path_files() {
    local -a opts files dirs pats ignore
    zparseopts -a mopts f=files /=dirs g+:=pats F:=ignore \
      P: S: q r: R: W:  M+: J+: V+: x+: X+: 1 2 o+: n
    (( $#f || ! $#dirs )) && _z4h_only_dirs=0
    local -ir _z4h_in_path_files=1
    -z4h-orig-path-files "$@"
  }

  zle z4h-expand-or-complete
} always {
  functions[_path_files]=${functions[-z4h-orig-path-files]}
  functions[_fzf_tab__main_complete]=${functions[-z4h-orig-fzf-tab-main-complete]}
  functions[compadd]=${functions[-z4h-orig-compadd]}
  functions[zle]=${functions[-z4h-orig-zle]}
}
