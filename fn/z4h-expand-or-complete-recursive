if (( ! ${+functions[-z4h-orig-path-files]} )); then
  autoload +X -Uz _path_files
  functions[-z4h-orig-path-files]=${functions[_path_files]}
fi
if (( ! ${+functions[-z4h-orig-fzf-tab-get]} )); then
  functions[-z4h-orig-fzf-tab-get]=${functions[_fzf_tab_get]}
fi
if (( ! ${+functions[-z4h-orig-compadd]} )); then
  functions[-z4h-orig-compadd]=${functions[compadd]:-'builtin compadd "$@"'}
fi
if (( ! ${+functions[-z4h-orig-zle]} )); then
  functions[-z4h-orig-zle]=${functions[zle]:-'builtin zle "$@"'}
fi

function _z4h_comp_insert() {
  echo here >>/tmp/log
  _z4h_words=(lol)
  builtin compadd -UQf -p "$_z4h_word_prefix" -W "$_z4h_path_prefix" -o nosort -a _z4h_words
  #compstate[list]=
  #compstate[insert]=all
}

zle -C -- -z4h-comp-insert complete-word _generic
zstyle ':completion:-z4h-comp-insert:*' completer _z4h_comp_insert
#zstyle ':completion:-z4h-comp-insert:*' completer _all_matches _z4h_comp_insert
#zstyle ':completion:-z4h-comp-insert:*' insert true

local _z4h_word_prefix
local _z4h_path_prefix
local -a _z4h_words
local -i _z4h_recursive
local -i _z4h_zle_call_num
local -i _z4h_in_path_files

{
  function _fzf_tab_get() {
    if [[ $_z4h_recursive == 1 && $# == 3 && $1 == -s && $2 == ignore && $3 == ignore ]]; then
      typeset -g ignore=99999999
      return
    fi
    -z4h-orig-fzf-tab-get "$@"
  }
 
  function zle() {
    if [[ "${1-}" != .fzf-tab-orig-* ]]; then
      -z4h-orig-zle "$@"
      return
    fi
    (( _z4h_zle_call_num++ && _z4h_recursive == 1 )) && return
    -z4h-orig-zle "$@"
  }

  function compadd() {
    exec 3>&2 2>>/tmp/log
    {
      setopt xtrace
      print -r -- $0 ${(qqq)@} >>/tmp/log
      if (( _z4h_recursive != -1 )); then
        local -a opts nDOA Q f s S I W U i P p
        zparseopts -E -a opts {D,O,A}+:=nDOA n+=nDOA Q+=Q f+=f s+:=s S+:=S I+:=I W+:=W \
          U+:=U i+:=i P+:=P p+:=p {a,k,q,e,l,1,2,C}+ {F,d,J,X,x,V,r,R,E,M}+: o+::
        if (( ! $#nDOA )); then
          local -a matches
          () {
            builtin compadd -A matches "$@"
            (( ${#matches} )) || return 0
            emulate -L zsh
            (( _z4h_in_path_files && $#Q && $#f )) || return
            [[ -z $s[2] && -z $S[2] && -z $I[2] && $W[2] == */ ]] || return
            local prefix=${U:-$IPREFIX}$i[2]$P[2]$p[2]
            if (( $#_z4h_words )); then
              [[ $W[2] == $_z4h_path_prefix && $prefix == $_z4h_word_prefix ]] || return
            else
              _z4h_word_prefix=$prefix
              _z4h_path_prefix=$W[2]
            fi
            _z4h_words+=($matches)
            if (( ! _z4h_recursive )); then
              local dirs=(${^_z4h_path_prefix}(-FN))
              (( ! $#dirs )) || _z4h_recursive=1
            fi
          } "$@" || _z4h_recursive=-1
          typeset -p _z4h_word_prefix _z4h_path_prefix _z4h_words _z4h_recursive >>/tmp/log
        fi
      fi
    } always {
      unsetopt xtrace
      exec 2>&3 3>&-
    }
    -z4h-orig-compadd "$@"
  }

  function _path_files() {
    print -r -- $0 ${(qqq)@} >>/tmp/log
    local -ir _z4h_in_path_files=1
    -z4h-orig-path-files "$@"
  }

  zle z4h-expand-or-complete
} always {
  functions[_path_files]=${functions[-z4h-orig-path-files]}
  functions[_fzf_tab_get]=${functions[-z4h-orig-fzf-tab-get]}
  functions[compadd]=${functions[-z4h-orig-compadd]}
  functions[zle]=${functions[-z4h-orig-zle]}
}

if (( _z4h_recursive == 1 )); then
  zle -w -- -z4h-comp-insert
fi
